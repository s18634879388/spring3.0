<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


    <context:component-scan base-package="com.smart.pointcuttest"/>
    <!--<bean id="myAdvisor" class="com.smart.pointcuttest.MyAdvisor"></bean>-->
    <bean id="greetBeforeAdvice" class="com.smart.sxqtest.GreetBeforeAdvice"></bean>
    <bean id="advisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
        p:advice-ref="greetBeforeAdvice">
        <property name="patterns">
            <list>
                <value>.*greet</value>
            </list>
        </property>
    </bean>
    <aop:aspectj-autoproxy/>
    <bean id="waiter2" class="com.smart.pointcuttest.NativeWaiter2"></bean>
    <!-- 手动创建代理 -->
    <!--<bean id="nativeWaiter2" class="org.springframework.aop.framework.ProxyFactoryBean"-->
        <!--p:interceptorNames="advisor"-->
          <!--p:target-ref="waiter2"-->
          <!--p:proxyTargetClass="true"-->
    <!--&gt;</bean>-->
    <!--<bean id="nativeServer2" class="com.smart.pointcuttest.NativeServer2"></bean>-->
    <!-- 自动创建代理 -->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"></bean>-->
    <bean class="com.smart.pointcuttest.AspectJTest"></bean>



</beans>